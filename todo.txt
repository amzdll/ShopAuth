2.  Необходимо реализовать сервис авторизации (отдельное приложение),
    используя который можно будет аутентифицировать и авторизовать пользователей
     для магазина бытовой техники.
   2.1. Сервис авторизации должен иметь своё хранилище (PostgreSQL).
    Для этого создаёте новую базу данных и прокидываете строку подключения внутрь своего сервиса
    (Не новая таблица, а новая база!).
   2.2. Сервис авторизации должен предоставлять взаимодействие только лишь
        посредством протокола gRPC.
        Настройте его в качестве gRPC сервера, опишите .proto файл,
            с описанием предоставляемых методов.
   2.3. Сервис авторизации должен предоставлять следующие методы:
    2.3.1. Создание пользователя по входным данным (почта, имя, фамилия, номер телефона, пароль),
           возвращает подписанный токен.
    2.3.2. Необходимо соблюсти один из важнейших принципов компьютерной безопасности:
           система не должна хранить пароли своих пользователей в открытом виде.
           Пароли в базе необходимо хранить в захэшированном виде с солью
           (произвольной сконкатенированной до хэширования строкой).
           Также нельзя брать устаревшие и имеющие уязвимости алгоритмы хэширования md5 и sha1.
            Таким образом, даже если ваша база данных попадет в руки злоумышленников,
            они не узнают реальные пароли, которыми пользуются ваши клиенты.
    2.3.3. Проверка пары логин-пароль (аутентифицировать пользователя), возвращает токен.
    2.3.4. Изменение пароля пользователя
    2.3.5. Метод восстановления пароля: Отправки пароля на почту пользователя
            (Саму отправку на почту реализовывать не нужно.
             Вместо этого, реализовать заглушку отправки на почту в виде вывода пароля
             в консоль сервиса авторизации)